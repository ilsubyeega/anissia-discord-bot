import {
    APIApplicationCommand,
    APIApplicationCommandInteraction,
    APIApplicationCommandInteractionDataStringOption,
    APIChatInputApplicationCommandInteraction,
    ApplicationCommandOptionType,
    ApplicationCommandType,
    ButtonStyle,
    ComponentType,
    InteractionResponseType,
    MessageFlags
} from "discord-api-types/v10";
import {CommandInteractionHandler, CommandInteractionType} from "../lib/types";
import getAnimeInfo from "../anissia/apis/animeinfo"

export default class AniInfo implements CommandInteractionType {
    data: Omit<APIApplicationCommand, "application_id" | "id" | "version"> = {
        type: ApplicationCommandType.ChatInput,
        name: "aniinfo",
        description: "Ïï†Îãà Ï†ïÎ≥¥Î•º ÌôïÏù∏Ìï©ÎãàÎã§.",
        default_member_permissions: null,
        dm_permission: false,
        options: [
            {
                name: "aniinfo_id",
                description: "IDÎ•º ÌÜµÌïú Í≤ÄÏÉâ (Ïù¥Î¶ÑÏúºÎ°ú ÏûëÏÑ± Ïãú ÏûêÎèôÏôÑÏÑ±)",
                type: ApplicationCommandOptionType.String,
                required: true,
                autocomplete: true
            }
        ]
    }
    handle: CommandInteractionHandler = async (interaction: APIApplicationCommandInteraction) => {
        interaction = interaction as APIChatInputApplicationCommandInteraction
        const arg = (interaction.data.options?.[0] as APIApplicationCommandInteractionDataStringOption)?.value
        if (arg == null) {
            return {
                type: InteractionResponseType.ChannelMessageWithSource,
                data: {
                    content: "ÏûòÎ™ªÎêú Ï†ëÍ∑ºÏûÖÎãàÎã§."
                }
            }
        }

        const anime = await getAnimeInfo(encodeURIComponent(arg))
        if (anime == null || anime.subject == null || anime.subject.length == 0) {
            return {
                type: InteractionResponseType.ChannelMessageWithSource,
                data: {
                    content: `${arg} ÏôÄ Í¥ÄÎ†®Îêú Í≤ÄÏÉâ Í≤∞Í≥ºÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.`,
                    flags: MessageFlags.Ephemeral
                }
            }
        }

        const beautifyDate = (datestr: string) => {
            datestr += "+09:00"
            const d = new Date(Date.parse(datestr))
            return d.toLocaleString("ko-KR")
        }

        const koWeeks = ["ÏùºÏöîÏùº", "ÏõîÏöîÏùº", "ÌôîÏöîÏùº", "ÏàòÏöîÏùº", "Î™©ÏöîÏùº", "Í∏àÏöîÏùº", "ÌÜ†ÏöîÏùº", "Í∏∞ÌÉÄ", "Ïã†Ïûë"]
        const strarr = [];
        strarr.push(`Î∞©ÏòÅ Í∏∞Í∞Ñ: ${anime.startDate} ~ ` + (anime.endDate || "Î∞©ÏòÅÏ§ë"))
        if (!isNaN(parseInt(anime.week)))
            strarr.push(`Î∞©ÏòÅÏÉÅÌÉú: Îß§Ï£º ${koWeeks[parseInt(anime.week)]} ${anime.time}`)
        strarr.push(`Ïû•Î•¥: ${anime.genres.replaceAll(",", ", ")}`)
        return {
            type: InteractionResponseType.ChannelMessageWithSource,
            data: {
                embeds: [
                    {
                        title: anime.subject,
                        description: strarr.join("\n"),
                        fields: anime.captions.map(caption => {
                            return {
                                name: `${caption.name} (${caption.episode.padStart(2, '0')}Ìôî)`,
                                value: `[${beautifyDate(caption.updDt)}](${caption.website})`
                            }
                        })
                    }
                ],
                components: [
                    {
                        type: ComponentType.ActionRow,
                        components: [
                            {
                                type: ComponentType.Button,
                                label: "üîó Ïï†ÎãàÏãúÏïÑ ÏõπÏÇ¨Ïù¥Ìä∏",
                                style: ButtonStyle.Link,
                                url: `https://anissia.net/anime?animeNo=${anime.animeNo}`
                            },
                            {
                                type: ComponentType.Button,
                                label: "üîó Í≥µÏãù ÏõπÏÇ¨Ïù¥Ìä∏",
                                style: ButtonStyle.Link,
                                url: anime.website
                            }
                        ]
                    }
                ]
            }
        }
    }
}